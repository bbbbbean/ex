package Ch38.Controller;

import java.util.HashMap;
import java.util.Map;

import Ch38.Domain.Dto.BookDto;

public class BookController implements SubController {

	Map<String, Object> response;
	
	@Override
	public Map<String, Object> execute(Map<String, Object> params) {
		System.out.println("[SC] BookController execute Invoke");
		// 00 기본 설정
		response = new HashMap();
		Integer serviceNo = (Integer)params.get("serviceNo");
		// 값 입력 X -> null
		if(serviceNo==null) {
			response.put("status", false);
			response.put("message","유효하지 않은 서비스 요청입니다");
			return response;
		}
		// 스위치 사용 번호 판별
		switch(serviceNo) {
		case 1:	// C - 도서 등록(role - 사서, 관리자)
			System.out.println("[SC] 도서 등록 요청 확인");
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			String bookCode = params.get("bookCode")!=null?(String)params.get("bookCode"):null;
			String bookName = params.get("bookName")!=null?(String)params.get("bookName"):null;
			String Publisher = params.get("Publisher")!=null?(String)params.get("Publisher"):null;
			String isbn = params.get("isbn")!=null?(String)params.get("isbn"):null;
			BookDto bookDto = new BookDto(bookCode,bookName,Publisher,isbn);
			
			// 02 유효성 체크(Validation)
			
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)
			break;
		case 2:	// R - 도서 조회(role - 회원, 사서, 관리자)
			System.out.println("[SC] 도서 조회 요청 확인");
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			// 02 유효성 체크(Validation)
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)			
			break;
		case 3:	// U - 도서 수정(role - 사서, 관리자)
			System.out.println("[SC] 도서 수정 요청 확인");
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			// 02 유효성 체크(Validation)
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)			
			break;
		case 4:	// D - 도서 삭제 (role - 사서, 관리자)
			System.out.println("[SC] 도서 삭제 요청 확인");
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			// 02 유효성 체크(Validation)
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)			
			break;
		default :
			System.out.println("[SC] 잘못된 서비스번호 요청 확인");
			response.put("status", false);
			response.put("message", "잘못된 서비스 번호 요청입니다");
		}
		return response;
	}
	// 유효성 검사
	private boolean isValid(BookDto bookDto) {
		if(bookDto.getBookCode()==null) {
			response.put("error", "bookCode를 비울 수 없습니다.");
			System.out.println("[INVALID] bookCode를 비울 수 없습니다");
		}else if(bookDto.getBookCode().length()>8) {
			response.put("error", "bookCode는 8글자를 넘을 수 없습니다.");
			System.out.println("[INVALID] bookCode는 8글자를 넘을 수 없습니다");
		}
		
		
		
		return true;
	}

}
