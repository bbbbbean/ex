package Ch38.Controller;

import java.util.HashMap;
import java.util.Map;

import Ch38.Domain.Dto.UserDto;

// 사용자 관련 컨트롤러

public class UserController implements SubController {

	// C(1)R(2)U(3)D(4) + 로그인(5), 로그아웃(6)
	@Override
	public Map<String, Object> execute(Map<String, Object> params) {
		System.out.println("[SC] UserController execute Invoke");
		// 00
		Map<String,Object> response = new HashMap();
		Integer serviceNo = (Integer)params.get("serviceNo");
		// 값이 제대로 들어오지 않은 경우
		if(serviceNo == null) {
			response.put("status",false);
			response.put("message","유효하지 않은 서비스 요청입니다");
			return response;
		}
		// 스위치를 써 번호 판별
		switch(serviceNo) {
		case 1:			// C - 회원가입
			System.out.println("[SC] 회원가입 요청 확인");
			// DTO단위로 정보 들어옴 (userid, username, password, role(role은 있을수도 없을수도)
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			// null 유효성 검사, 값이 있다면 형변환
			String userid = (params.get("userid")!=null)?(String)params.get("userid"):null;
			String username = (params.get("username")!=null)?(String)params.get("username"):null;
			String password = (params.get("password")!=null)?(String)params.get("password"):null;	
			String role = "ROLE_USER";	// 기본값
			
			// 02 유효성 체크(Validation)
			
			
			
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)
			break;
		case 2:			// R - 개인 회원 정보 조회
			System.out.println("[SC] 회원정보 조회 요청 확인");
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			// 02 유효성 체크(Validation)
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)
			break;
		case 3:			// U - 개인 회원 정보 수정
			System.out.println("[SC] 회원정보 수정 요청 확인");
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			// 02 유효성 체크(Validation)
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)
			break;
		case 4:			// D - 개인 회원 탈퇴
			System.out.println("[SC] 회원 탈퇴 요청 확인");
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			// 02 유효성 체크(Validation)
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)
			break;
		case 5:			// P - 로그인
			System.out.println("[SC] 로그인 요청 확인");
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			// 02 유효성 체크(Validation)
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)
			break;
		case 6:			// P - 로그아웃
			System.out.println("[SC] 로그아웃 요청 확인");
			// 01 파라미터 받기(정보 선별, 잘들어왔는가)
			// 02 유효성 체크(Validation)
			// 03 관련 서비스 실행
			// 04 뷰로 이동(or 내용 전달)
			break;
		default :
			System.out.println("[SC] 잘못된 서비스번호 요청 확인");
			response.put("status",false);
			response.put("message","잘못된 서비스번호 요청입니다");
		}
		
		return response;
	}
	
	private boolean isValid(UserDto userDto) {
		
		
		
		return true;
	}

}
