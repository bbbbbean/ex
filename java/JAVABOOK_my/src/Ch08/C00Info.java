package Ch08;

import java.util.Scanner;

public class C00Info {
	// 객체 <-> 주체
	// 현실에 있는 모든 것들을 프로그램 안으로 들고오기 위해 만든 문법 == 객체 지향 문법
	
	// 1. 객체 - Object
	// 존재(독점적이고 배타적인 공간을 차지)하는 사물(Object) 모든 것, 그냥 사물보다 포괄적
	
	// 2. 객체
	// 속성(Attribute)	: 객체를 표현할 수 있는 여러가지 데이터, 일반적으로 고유성을 지님, 객체마다 구별되는 데이터(저장 - 변수처리) >> 명사 
	// 기능(Function)		: 객체가 수행할 수 있는 '공통' Action (기능 - 메서드 처리) >> 동사
	// 함수와 변수는 저장되는 위치가 다름
	
	// 3. 객체 지향
	// 현실 세계의 여러 객체의 정보(속성/기능 ) 중에 필요한 일부만 추출(추상화)하여
	// 문제 해결을 하기 위한 요소 단위로 적재(저장)하기 위해 고안된 문법
	
	// 추상화 > 프로그램의 목적에 따라 설계 필요
	//		> 고객에 대한 정보를 가져올 계획 - 쇼핑몰(이름, 주소, 연락처, 장바구니 등등) - 도서(이름, 도서 Id, 대여일 등등) 이런 식으로 정보 유형이 다름
	
	// 4. 클래스
	// 동일한 종류의 객체에 필요한 메모리공간을 제공하기 위해 선언된 자료형
	// 객체에 필요한 공간을 만들어 주기 위해 미리 선언된 자료형
	// class 자체만으로는 메모리 공간을 차지하지 않음. 그냥 설계도. 문서 형태로 저장
	// 클래스로 객체를 생성하기 전에는 기본적으로 메모리 공간을 차지하지 않는다.
	// Document화
	// 클래스 자료형에 의해 객체가 정의되는 순간 클래스에서 선언한 속성과 기능대로 공간 형성이 이루어진다.
	
	// 5. 자바의 메모리 영역
	// 1) 스택 영역			: {}내에서 생성되고 소멸되는 영역(int, double...)
	// 2) 클래스 영역(==메서드)	: 공유 메모리 영역(생성자, 일반 메서드, static 메서드, static 변수)
	// 3) 힙 영역				: 객체 저장 영역(new 예약어 사용 시 할당)
	
	// 6. 코드 해석
	Scanner sc = new Scanner(System.in);
	
	// stack -> Scanner 주소 저장, heap영역의 해당 주소로 찾아가 scanner 사용
	// Heap -> class에서 넘어온 Scanner 객체 도안을 기반으로 스캐너 생성 -> 주소 부여
	// class(method) -> return Scanner객체 도안 전달
	
	// new			: 힙(Heap) 영역에 객체 저장
	// Scanner()	: 객체에 필요한 초기값을 부여하기 위한 생성자 메서드
	// Scanner sc	: Scanner라는 클래스 자료형으로 정의된 참조 변수 sc
	
	// 힙메모리(Heap) 영역에 Scanner에 필요한 초기값이 담긴 객체를 생성하고
	// 현위치 (main stack)에 Scanner 자료형으로 만든 sc 참조변수에 생성된 Scanner 객체의
	// "시작 위치" 주소를 저장
	
	
	
	
	
	
	
	
	
}
